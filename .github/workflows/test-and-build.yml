name: Quarkus Build CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: build & push
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: assemble
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble

      - name: check
        uses: gradle/gradle-build-action@v2
        env:
          MOVIE_DB_API_KEY: ${{ secrets.MOVIE_DB_API_KEY }}
        with:
          arguments: check

      - name: build container
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build -x test -Dquarkus.container-image.build=true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: push container
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build -x test -Dquarkus.container-image.push=true -Dquarkus.container-image.group=${{ github.repository_owner }} -Dquarkus.container-image.name=${{ github.event.repository.name }} -Dquarkus.container-image.registry=ghcr.io -Dquarkus.container-image.additional-tags=${{ github.sha }}



  deploy:
    name: deploy to k8s
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Helm Deploy to k8s
        uses: vimeda/helm@v1.6.8
        with:
          release: 'movietime-bff'
          namespace: 'movietime'
          chart: 'helm/movietime-bff'
          token: '${{ secrets.GITHUB_TOKEN }}'
          values: |
            image:
              tag: ${{ github.sha }}
            config:
              movieDbService:
                apiKey: ${{ secrets.MOVIE_DB_API_KEY }}
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
